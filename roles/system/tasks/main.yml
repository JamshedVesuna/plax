---
- name: setup directories
  file: path={{ home }}/{{ item }} state=directory
  with_items:
    - scripts
    - tmp
    - projects
    - scratch

- name: zsh facts
  shell: 'echo $SHELL'
  register: default_shell
  changed_when: False

- name: make zsh default
  shell: chsh -s /bin/zsh
  become_method: sudo
  when: default_shell.stdout.find('/bin/zsh') == -1


- name: download github repositories
  git: repo={{ item.url }}
       dest={{ item.dest }}
       update=no
       track_submodules=True
  vars:
      projects: "{{ home }}/projects/"
  with_items:
    - { url: 'git@github.com:JamshedVesuna/dotfiles.git', dest: "{{ home }}/scripts/dotfiles" }

- name: homebrew
  homebrew:
    state: present
    update_homebrew: yes
    upgrade_all: yes
    name:
    #upgrade_all=yes
  #with_items:
      # Text Editors
      - macvim
      - vim
      # Languages
      - go
      - markdown
      - pandoc
      - python
      - python3
      # Networking
      - curl
      - iperf
      - nmap
      - openssl
      - wget
      # Version Control
      - git
      # Virtual
      - docker
      - docker-machine
      - postgresql
      # Cli
      - bash
      - tmux
      - zsh
      # Searching
      - ack
      - the_silver_searcher
      # Misc tools
      - awscli
      - cask
      - cmake
      - ctags
      - gettext
      - gnupg2
      - gpg
      - grip

- name: homebrew cask
  homebrew_cask:
    name={{ item }}
    state=present
    install_options=force
  with_items:
    - 1password
    - dropbox
    - google-chrome
    - slack
    - spectacle
    - spotify

- name: dotfile sourcing
  lineinfile: dest={{ home }}/{{ item.location }} line={{ item.line }} create=true
  with_items:
    - { location: '.bashrc',    line: 'export DOTFILES_PATH={{ home }}/scripts/dotfiles' }
    - { location: '.bashrc',    line: 'source $DOTFILES_PATH/bash/.bashrc' }
    - { location: '.zshrc',     line: 'export DOTFILES_PATH={{ home }}/scripts/dotfiles' }
    - { location: '.zshrc',     line: 'source $DOTFILES_PATH/zsh/.zshrc' }
    - { location: '.zshrc',     line: 'alias plax="cd ~/scripts/plax; ansible-playbook -i inventory playbook.yml; cd -"' }
    - { location: '.zshrc',     line: 'alias plaxe="mvim ~/scripts/plax/roles/system/tasks/main.yml"' }
    - { location: '.gvimrc',    line: 'source $DOTFILES_PATH/vim/.gvimrc' }
    - { location: '.tmux.conf', line: 'source $DOTFILES_PATH/tmux/.tmux.conf' }
    - { location: '.vimrc',     line: 'source $DOTFILES_PATH/vim/.vimrc' }
    - { location: '.gitconfig', line: '[include]' }
    - { location: '.gitconfig', line: '  path = ~/scripts/dotfiles/git/.gitconfig' }

- name: dotfile symlink
  file: src={{ home }}/scripts/dotfiles/vim/.vim dest={{ home }}/.vim state=link

- name: os x specific configurations
  osx_defaults: domain={{ item.domain }} key={{ item.key }} type={{ item.type }} value={{ item.value }}
  with_items:
    # Default is 35 ms
    - { key: 'InitialKeyRepeat',                   domain: 'NSGlobalDomain',        type: 'int',   value: '15' }
    # Default is 0 ms
    - { key: 'KeyRepeat',                          domain: 'NSGlobalDomain',        type: 'int',   value: '2' }
    - { key: 'AppleKeyboardUIMode',                domain: 'NSGlobalDomain',        type: 'int',   value: '3' }
    # Allow key repeat, remove character accents
    - { key: 'ApplePressAndHoldEnabled',           domain: 'NSGlobalDomain',        type: 'bool',  value: 'false' }
    # Only show active apps in Dock
    - { key: 'static-only',                        domain: 'com.apple.dock',        type: 'bool',  value: 'true' }
    # Autohide Dock
    - { key: 'autohide',                           domain: 'com.apple.dock',        type: 'bool',  value: 'true' }
    # Don't show the Dashboard as a space
    - { key: 'dashboard-in-overlay',               domain: 'com.apple.dock',        type: 'bool',  value: 'true' }
    # Don't automatically rearrange spaces base on MRU
    - { key: 'mru-spaces',                         domain: 'com.apple.dock',        type: 'bool',  value: 'false' }
    # Show all filename extensions in Finder
    - { key: 'AppleShowAllExtensions',             domain: 'NSGlobalDomain',        type: 'bool',  value: 'true' }
    # Remove the warning when changing a file extension
    - { key: 'FXEnableExtensionChangeWarning',     domain: 'com.apple.finder',      type: 'bool',  value: 'false' }
    # Show the path bar in Finder
    - { key: 'ShowPathbar',                        domain: 'com.apple.finder',      type: 'bool',  value: 'true' }
    # Ask for password immediately after sleep
    - { key: 'askForPasswordDelay',                domain: 'com.apple.screensaver', type: 'float', value: '0' }
    # Expand the save dialog
    - { key: 'NSNavPanelExpandedStateForSaveMode', domain: 'NSGlobalDomain',        type: 'bool',  value: 'true' }
    # Enable tap to click for Trackpad
    - { key: 'com.apple.mouse.tapBehavior',        domain: 'NSGlobalDomain',        type: 'int',   value: '1' }
